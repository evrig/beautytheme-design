<?php

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\StoreConfig;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Escaper $escaper */
/** @var Template $block */
/** @var ViewModelRegistry $viewModels */

$storeConfig = $viewModels->require(StoreConfig::class);
$maxItemsToDisplay = $storeConfig->getStoreConfig('checkout/sidebar/max_items_display_count');

/** @var HeroiconsOutline $heroIcons */
$heroIcons = $viewModels->require(HeroiconsOutline::class);

/** @var HeroiconsSolid $heroIconsSolid */
$heroIconsSolid = $viewModels->require(HeroiconsSolid::class);

$miniCartOptionQtyStyle = (string) $block->getQtyStyle() ?: 'default';
$miniCartOptionShowSku = $block->getShowSku() !== null ? (bool) $block->getShowSku() : false;
$miniCartOptionQtySaveAuto = $miniCartOptionQtyStyle === "incrementor" || $miniCartOptionQtyStyle === "select";
?>

<script>
    function initCartDrawer() {
        return {
            open: false,
            isLoading: false,
            cart: {},
            maxItemsToDisplay: <?= (int) $maxItemsToDisplay ?>,
            itemsCount: 0,
            showSku: <?= $miniCartOptionShowSku ? 'true' : 'false' ?>,
            getData(data) {
                if (data.cart) {
                    this.cart = data.cart;
                    this.itemsCount = data.cart.items && data.cart.items.length || 0;
                    this.setCartItems();
                }
                this.isLoading = false;
            },
            cartItems: [],
            getItemCountTitle() {
                return hyva.strf('<?= $escaper->escapeJs(__('%0 of %1 products in cart displayed')) ?>', this.maxItemsToDisplay, this.itemsCount)
            },
            setCartItems() {
                this.cartItems = this.cart.items && this.cart.items.sort((a, b) => b.item_id - a.item_id) || [];

                if (this.maxItemsToDisplay > 0) {
                    this.cartItems = this.cartItems.slice(0, parseInt(this.maxItemsToDisplay, 10));
                }
            },
            updateItemQty(form) {
                if (!form.action) return;
                this.isLoading = true;
                const action = form.action;
                const formData = new FormData(form);
                formData.append('form_key', hyva.getFormKey());

                if (!formData.uenc) {
                    formData.append('uenc', hyva.getUenc());
                }

                fetch(action, {
                    body: formData,
                    method: 'POST',
                    mode: "cors",
                    credentials: "include"
                }).then((result) => {
                    return result.text()
                }).then((content) => {
                    window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
                }).catch((error) => {
                    window.dispatchMessages && window.dispatchMessages([{
                        type: 'error',
                        text: '<?= $escaper->escapeJs(__("Something went wrong. Please try again.")) ?>'
                    }]);
                }).finally(() => {
                    this.isLoading = false;
                })
            },
            deleteItemFromCart(itemId) {
                this.isLoading = true;

                const formKey = hyva.getFormKey();
                const postUrl = BASE_URL + 'checkout/sidebar/removeItem/';

                fetch(postUrl, {
                    headers: {
                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                    },
                    body: "form_key=" + formKey + "&item_id=" + itemId,
                    method: "POST",
                    mode: "cors",
                    credentials: "include"
                }).then(response => {
                    if (response.redirected) {
                        window.location.href = response.url;
                    } else if (response.ok) {
                        return response.json();
                    } else {
                        window.dispatchMessages && window.dispatchMessages([{
                            type: 'warning',
                            text: '<?= $escaper->escapeJs(__('Could not remove item from quote.')) ?>'
                        }]);
                        this.isLoading = false;
                    }
                }).then(result => {
                    window.dispatchMessages && window.dispatchMessages([{
                        type: result.success ? 'success' : 'error',
                        text: result.success
                            ? '<?= $escaper->escapeJs(__('You removed the item.')) ?>'
                            : result.error_message
                    }], result.success ? 5000 : 0)
                    window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                });
            },
            toggleCartDrawer(event) {
                if (event.detail && event.detail.isOpen) {
                    this.open = event.detail.isOpen;
                } else {
                    this.open = !this.open;
                }
                this.calcCartDrawerAnchor();
            },
            openCartDrawer() {
                this.open = true;
                this.calcCartDrawerAnchor();
            },
            closeCartDrawer() {
                this.open = false;
            },
            getSectionDataExtraActions() {
                if (!this.cart.extra_actions || typeof hyva.activateScripts === "undefined") {
                    return '';
                }

                const contentNode = document.createElement('div');
                contentNode.innerHTML = this.cart.extra_actions;
                hyva.activateScripts(contentNode);

                return contentNode.innerHTML;
            },
            calcCartDrawerAnchor() {
                const btn = this.$refs.cartButton ? this.$refs.cartButton.getBoundingClientRect() : {};
                const scrollOffset = window.pageYOffset || document.documentElement.scrollTop;
                const btnOffset = btn.top && (btn.top + btn.height);
                const offsetTop = btnOffset
                    ? `${btnOffset < 0 ? btnOffset + scrollOffset : btnOffset}px`
                    : "1rem";
                const offsetRight = btn.right ? `${Math.floor((window.innerWidth - btn.right) + (btn.width / 4))}px` : "1rem";

                const drawer = this.$refs.cartDialogContent;
                drawer.style.setProperty('--cart-drawer-offset-top', offsetTop);
                drawer.style.setProperty('--cart-drawer-offset-right', offsetRight);
            },
            cartListeners: {
                ['@private-content-loaded.window'](event) {
                    this.getData(event.detail.data);
                },
                ['@toggle-cart.window'](event) {
                    this.toggleCartDrawer(event);
                },
                ['@keydown.window.escape']() {
                    this.$dispatch('toggle-cart', { isOpen: false })
                },
                ['@click.outside'](event) {
                    this.$dispatch('toggle-cart', { isOpen: false })
                },
                ['@resize.window.debounce']() {
                    if (!this.open) return;
                    this.calcCartDrawerAnchor();
                }
            }
        }
    }
</script>

<section
    id="cart-drawer"
    aria-labelledby="cart-drawer-title"
    class="mx-3 md:mx-0 flex flex-col gap-y-8 mt-5 py-6 px-4 [&_>*]:px-2 max-w-full z-30 absolute top-[var(--cart-drawer-offset-top)]
        inset-x-0 md:left-auto md:right-1.5
        max-h-[clamp(480px,95vh_-_var(--cart-drawer-offset-top,0px),860px)] md:w-[420px] rounded-lg
        shadow-lg bg-white border-t-4 border-copper before:border-b-copper
        before:border-8 before:border-t-transparent before:border-x-transparent before:absolute
        before:bottom-[calc(100%+theme(borderWidth.4))] before:right-3 md:before:right-4"
    x-show="open"
    x-transition.origin.top.right
    x-ref="cartDialogContent"
    x-data="initCartDrawer()"
    x-bind="cartListeners"
    x-cloak
    :aria-hidden="!open"
>
    <?= $block->getChildHtml('cart-drawer.top'); ?>

    <p id="cart-drawer-title" class="text-2xl">
        <strong class="font-medium"><?= $escaper->escapeHtml(__('My Cart')) ?></strong>
        <span
            class="items-total text-xs"
            x-show="maxItemsToDisplay && maxItemsToDisplay < itemsCount"
            x-text="getItemCountTitle()"
        ></span>
    </p>

    <?= $block->getChildHtml('cart-drawer.items.before'); ?>

    <template x-if="!itemsCount">
        <div class="grow grid place-items-center md:min-h-[340px]">
            <div class="text-center">
                <div class="max-w-full max-h-full aspect-square w-44 h-44 inline-flex items-center justify-center rounded-full
                    bg-pearl text-copper outline-2 outline-dashed outline-pearl outline-offset-8">
                    <?= $heroIconsSolid->shoppingCartHtml('', 120, 120, ['aria-hidden' => 'true']); ?>
                </div>
                <p class="mt-10 text-xl">
                    <strong><?= $escaper->escapeHtml(__('Your cart is empty')) ?></strong>
                </p>
                <p class="text-secondary">
                    <?= $escaper->escapeHtml(__("Looks like you haven't made your choice yet.")) ?>
                </p>
            </div>
        </div>
    </template>

    <template x-if="itemsCount">
        <ul class="grow flex flex-col overflow-y-auto overscroll-y-contain mask-overflow mask-dir-y">
            <template x-for="item in cartItems">
                <li class="flex gap-4 md:gap-6 items-start py-7 border-b border-pearl">
                    <a
                        class="block shrink-0 max-w-[25%]"
                        :href="item.product_url"
                        :title="hyva.str('<?= $escaper->escapeJs(__('Product "%1"')) ?>', item.product_name)"
                    >
                        <img
                            :src="item.product_image.src"
                            :width="item.product_image.width"
                            :height="item.product_image.height"
                            loading="lazy"
                            :alt="hyva.str('<?= $escaper->escapeJs(__('Product "%1"')) ?>', item.product_name)"
                        >
                    </a>
                    <div class="grow space-y-4">
                        <div class="flex gap-2 justify-between items-center">
                            <p class="text-lg">
                                <?php if ($miniCartOptionQtyStyle === "text"): ?>
                                    <span x-text="item.qty + ' x '"></span>
                                <?php endif; ?>
                                <strong class="font-medium" x-html="item.product_name"></strong>
                            </p>
                            <span class="[&_.price]:font-normal" x-html="item.product_price"></span>
                        </div>
                        <template x-if="item.options && item.options.length || showSku">
                            <dl class="table text-sm">
                                <template x-if="showSku">
                                    <div class="table-row">
                                        <dt class="table-cell font-medium text-secondary min-w-[theme(spacing.16)] pr-2 pb-2">
                                            <?= $escaper->escapeHtml(__('Sku')) ?>
                                        </dt>
                                        <dd class="table-cell font-medium pb-2" x-html="item.product_sku"></dd>
                                    </div>
                                </template>
                                <template x-for="option in item.options">
                                    <div class="table-row">
                                        <dt
                                            class="table-cell font-medium text-secondary min-w-[theme(spacing.16)] pr-2 pb-2"
                                            x-text="option.label"
                                        ></dt>
                                        <dd class="table-cell font-medium pb-2" x-html="option.value"></dd>
                                    </div>
                                </template>
                            </dl>
                        </template>
                        <div class="flex flex-wrap gap-2 <?= $miniCartOptionQtyStyle === "text" ? 'justify-end' : 'justify-between' ?> items-center">
                            <?php if ($miniCartOptionQtyStyle !== "text"): ?>
                                <form
                                    action="<?= $escaper->escapeUrl($block->getUrl('checkout/cart/updatePost')) ?>"
                                    x-data="{
                                        initQty: item.qty,
                                        itemQty: item.qty,
                                        prevQty: item.qty,
                                        updateQty() {
                                            const submitEvent = new Event('submit', { cancelable: true });
                                            this.$root.dispatchEvent(submitEvent);
                                        },
                                        setQtyDefaults() {
                                            this.initQty = item.qty;
                                            this.itemQty = item.qty;
                                            this.prevQty = item.qty;
                                        }
                                    }"
                                    @submit.prevent="updateItemQty($event.target);"
                                    x-init="$watch('item.qty', () => setQtyDefaults());"
                                    method="post"
                                    class="form form-cart flex gap-1 border border-pearl"
                                >
                                    <?= $block->getBlockHtml('formkey') ?>
                                    <?php if ($miniCartOptionQtyStyle === "incrementor"): ?>
                                        <button
                                            type="button"
                                            @click="itemQty <= 0 ? itemQty = 0 : itemQty--"
                                            @click.debounce.1000ms="updateQty($event);"
                                            class="btn p-3 rounded bg-transparent shadow-none text-gray-erieb"
                                            aria-label="decrement"
                                        >
                                            <?= $heroIcons->minusHtml('', 20, 20, ['aria-hidden' => 'true']); ?>
                                        </button>
                                    <?php endif; ?>
                                    <label class="mb-0">
                                        <span class="sr-only"><?= $escaper->escapeHtml(__('Qty')) ?></span>
                                        <input
                                            type="number"
                                            class="border-none qty shadow-none font-bold [-moz-appearance:textfield]
                                                <?= $miniCartOptionQtyStyle === "select"
                                                    ? 'form-select py-2.5 pr-7 pl-3.5 focus:bg-none [&::-webkit-list-button]:w-0 [&::-webkit-calendar-picker-indicator]:!hidden'
                                                    : 'form-input py-2.5 px-3.5' ?>
                                                <?= $miniCartOptionQtyStyle === "incrementor" ? 'w-16 text-center' : 'w-20' ?>
                                                <?= $miniCartOptionQtyStyle === "select" || $miniCartOptionQtyStyle === "incrementor"
                                                    ? '[&::-webkit-inner-spin-button]:hidden'
                                                    : 'hover:[-moz-appearance:auto] [&::-webkit-inner-spin-button]:invisible hover:[&::-webkit-inner-spin-button]:visible' ?>"
                                            required
                                            min="0"
                                            step="any"
                                            x-model.number="itemQty"
                                            :id="`minicart-${item.item_id}-qty`"
                                            :name="`cart[${item.item_id}][qty]`"
                                            <?php if ($miniCartOptionQtyStyle === "select"): ?>
                                                :placeholder="initQty"
                                            <?php endif; ?>
                                            <?php if ($miniCartOptionQtySaveAuto): ?>
                                                @change.debounce.1000ms="updateQty($event)"
                                            <?php endif; ?>
                                            <?php if ($miniCartOptionQtyStyle === "select"): ?>
                                                list="minicart-autocomplete"
                                                @focus="prevQty = itemQty; itemQty = null"
                                                @blur="itemQty === null ? itemQty = prevQty : () => {}"
                                            <?php endif; ?>
                                        >
                                    </label>
                                    <?php if ($miniCartOptionQtyStyle === "incrementor"): ?>
                                        <button
                                            type="button"
                                            @click="itemQty++"
                                            @click.debounce.1000ms="updateQty($event);"
                                            class="btn p-3 rounded bg-transparent shadow-none text-gray-erieb"
                                            aria-label="increment"
                                        >
                                            <?= $heroIcons->plusHtml('', 20, 20, ['aria-hidden' => 'true']); ?>
                                        </button>
                                    <?php endif; ?>
                                    <?php if (!$miniCartOptionQtySaveAuto): ?>
                                        <button
                                            type="submit"
                                            class="btn justify-center rounded-md w-11 p-2 text-base shadow-none hover:shadow-lg active:shadow disabled:shadow-none transition
                                                bg-blue-600 text-white border border-transparent hover:bg-blue-700 focus:ring-blue-200 active:bg-blue-700
                                                disabled:bg-slate-600 disabled:text-slate-50 disabled:opacity-70 disabled:invisible"
                                            :disabled="itemQty === initQty || itemQty === null"
                                            :aria-label="hyva.str(
                                                '<?= $escaper->escapeJs(__('Update qty for "%1"')) ?>',
                                                item.product_name
                                            )"
                                        >
                                            <?= $heroIconsSolid->checkHtml('', 20, 20, ['aria-hidden' => 'true']); ?>
                                        </button>
                                    <?php endif; ?>
                                </form>
                            <?php endif; ?>
                            <div class="inline-flex flex-wrap items-center gap-1">
                                <a
                                    :href="item.configure_url"
                                    x-show="item.product_type !== 'grouped'"
                                    class="btn justify-center p-2 text-base text-copper disabled:bg-slate-50 disabled:text-slate-600 disabled:opacity-70"
                                    :aria-label="hyva.str(
                                        '<?= $escaper->escapeJs(__('Edit product "%1"')) ?>',
                                        item.product_name
                                    )"
                                >
                                    <?= $heroIconsSolid->pencilHtml('', 20, 20, ['aria-hidden' => 'true']); ?>
                                </a>
                                <button
                                    type="button"
                                    class="btn justify-center p-2 text-base text-copper disabled:bg-slate-200 disabled:text-slate-200"
                                    @click="deleteItemFromCart(item.item_id)"
                                    :aria-label="hyva.str(
                                        '<?= $escaper->escapeJs(__('Remove product "%1" from cart')) ?>',
                                        item.product_name
                                    )"
                                >
                                    <?= $heroIconsSolid->trashHtml('', 20, 20, ['aria-hidden' => 'true']); ?>
                                </button>
                            </div>
                        </div>
                    </div>
                </li>
            </template>
        </ul>
    </template>

    <?= $block->getChildHtml('cart-drawer.bottom'); ?>

    <template x-if="itemsCount">
        <div>
            <?= $block->getChildHtml('cart-drawer.totals.before'); ?>

            <dl class="flex gap-2 justify-between items-center text-sm font-bold">
                <dt class="text-lg"><?= $escaper->escapeHtml(__('Subtotal')) ?></dt>
                <dd class="text-xl" x-html="cart.subtotal"></dd>
            </dl>

            <div class="flex flex-col gap-y-4 mt-8">
                <a
                    @click.prevent.stop="closeCartDrawer; $dispatch(
                        'toggle-authentication',
                        { url: '<?= $escaper->escapeUrl($block->getUrl('checkout')) ?>' }
                    );"
                    href="<?= $escaper->escapeUrl($block->getUrl('checkout')) ?>"
                    class="btn btn-primary justify-center rounded-md py-3 px-6 text-base shadow-none hover:shadow-lg active:shadow transition border border-transparent"
                >
                    <?= $escaper->escapeHtml(__('Checkout')) ?>
                </a>
                <a
                    href="<?= $escaper->escapeUrl($block->getUrl('checkout/cart')) ?>"
                    class="btn btn-secondary justify-center py-3 px-6 disabled:bg-slate-200 disabled:text-copper uppercase"
                >
                    <?= $escaper->escapeHtml(__('View and Edit Cart')) ?>
                </a>
                <div x-html="getSectionDataExtraActions()"></div>
                <?= $block->getChildHtml('extra_actions'); ?>
            </div>
        </div>
    </template>

    <template x-if="!itemsCount">
        <div class="flex flex-col">
            <button
                type="button"
                @click="closeCartDrawer"
                class="btn btn-primary justify-center py-3 px-6 disabled:bg-slate-200 disabled:text-copper uppercase"
            ><?= $escaper->escapeHtml(__('Continue Shopping')) ?></button>
        </div>
    </template>

    <?php if ($miniCartOptionQtyStyle === "select"): ?>
        <datalist id="minicart-autocomplete">
            <template x-for="i in 100">
                <option :value="i"></option>
            </template>
        </datalist>
    <?php endif; ?>

    <?= $block->getChildHtml('loading') ?>
</section>
